# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=0.0

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
        minecraft:chicken 1.0
        minecraft:cow 1.0
        minecraft:pig 1.0
        minecraft:sheep 1.0
        minecraft:rabbit 1.0
        minecraft:squid 1.0
     >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=false

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=true

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:wooden_door, minecraft:iron_door, minecraft:trapdoor, minecraft:fence_gate, minecraft:iron_trapdoor, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, ic2:reinforced_door, betternether:stalagnate_planks_gate, betternether:reeds_gate, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, advancedrocketry:airlock_door, enderio:block_dark_steel_trapdoor, enderio:block_dark_steel_door, enderio:block_painted_fence_gate, enderio:block_painted_wooden_trapdoor, enderio:block_painted_iron_trapdoor, enderio:block_painted_dark_steel_trapdoor, enderio:block_painted_wooden_door, enderio:block_painted_iron_door, enderio:block_painted_dark_steel_door, traverse:fir_fence_gate, traverse:fir_door, structurize:blockcactusdoor, structurize:blockcactustrapdoor, structurize:blockcactusfencegate, dimdoors:gold_door, dimdoors:quartz_door, dimdoors:iron_dimensional_door, dimdoors:gold_dimensional_door, dimdoors:quartz_dimensional_door, dimdoors:dimensional_portal, dimdoors:oak_dimensional_door, dimdoors:dimensional_trapdoor, pvj:willow_fence_gate, pvj:mangrove_fence_gate, pvj:palm_fence_gate, pvj:redwood_fence_gate, pvj:fir_fence_gate, pvj:pine_fence_gate, pvj:aspen_fence_gate, pvj:maple_fence_gate, pvj:baobab_fence_gate, pvj:cottonwood_fence_gate, pvj:juniper_fence_gate, pvj:cherry_blossom_fence_gate, pvj:jacaranda_fence_gate, pvj:willow_door, pvj:mangrove_door, pvj:palm_door, pvj:redwood_door, pvj:fir_door, pvj:pine_door, pvj:aspen_door, pvj:maple_door, pvj:baobab_door, pvj:cottonwood_door, pvj:juniper_door, pvj:cherry_blossom_door, pvj:jacaranda_door, pvj:willow_trapdoor, pvj:mangrove_trapdoor, pvj:palm_trapdoor, pvj:redwood_trapdoor, pvj:fir_trapdoor, pvj:pine_trapdoor, pvj:aspen_trapdoor, pvj:maple_trapdoor, pvj:baobab_trapdoor, pvj:cottonwood_trapdoor, pvj:juniper_trapdoor, pvj:cherry_blossom_trapdoor, pvj:jacaranda_trapdoor } ]
    S:target_blocks <
        minecraft:wooden_door
        minecraft:iron_door
        minecraft:trapdoor
        minecraft:fence_gate
        minecraft:iron_trapdoor
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        minecraft:zombie 0.05 0.05
        minecraft:skeleton 0.2 0.05
        minecraft:zombie_pigman 0.1 0.05 0.02
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=1.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=20.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=40.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=3.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=0

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=2
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 1.0
        minecraft:zombie_pigman 1.0
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:tnt, minecraft:wooden_door, minecraft:lever, minecraft:stone_button, minecraft:cake, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:fence_gate, minecraft:wooden_button, minecraft:unpowered_comparator, minecraft:powered_comparator, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, betternether:stalagnate_planks_gate, betternether:stalagnate_planks_button, betternether:reeds_gate, betternether:reeds_button, betternether:cincinnasite_button, betternether:bone_button, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, advancedrocketry:airlock_door, enderio:block_self_resetting_lever5, enderio:block_self_resetting_lever10, enderio:block_self_resetting_lever30, enderio:block_self_resetting_lever60, enderio:block_self_resetting_lever300, enderio:block_self_resetting_lever5i, enderio:block_self_resetting_lever10i, enderio:block_self_resetting_lever30i, enderio:block_self_resetting_lever60i, enderio:block_self_resetting_lever300i, enderio:block_painted_fence_gate, enderio:block_painted_wooden_door, traverse:fir_fence_gate, traverse:fir_door, structurize:blockcactusdoor, structurize:blockcactusfencegate, dimdoors:quartz_door, dimdoors:quartz_dimensional_door, dimdoors:dimensional_portal, dimdoors:oak_dimensional_door, pvj:willow_fence_gate, pvj:mangrove_fence_gate, pvj:palm_fence_gate, pvj:redwood_fence_gate, pvj:fir_fence_gate, pvj:pine_fence_gate, pvj:aspen_fence_gate, pvj:maple_fence_gate, pvj:baobab_fence_gate, pvj:cottonwood_fence_gate, pvj:juniper_fence_gate, pvj:cherry_blossom_fence_gate, pvj:jacaranda_fence_gate, pvj:willow_door, pvj:mangrove_door, pvj:palm_door, pvj:redwood_door, pvj:fir_door, pvj:pine_door, pvj:aspen_door, pvj:maple_door, pvj:baobab_door, pvj:cottonwood_door, pvj:juniper_door, pvj:cherry_blossom_door, pvj:jacaranda_door, pvj:willow_button, pvj:mangrove_button, pvj:palm_button, pvj:redwood_button, pvj:fir_button, pvj:pine_button, pvj:aspen_button, pvj:maple_button, pvj:baobab_button, pvj:cottonwood_button, pvj:juniper_button, pvj:cherry_blossom_button, pvj:jacaranda_button, undergroundbiomes:igneous_stone_button_down, undergroundbiomes:igneous_stone_button_up, undergroundbiomes:igneous_stone_button_north, undergroundbiomes:igneous_stone_button_south, undergroundbiomes:igneous_stone_button_west, undergroundbiomes:igneous_stone_button_east, undergroundbiomes:igneous_cobble_button_down, undergroundbiomes:igneous_cobble_button_up, undergroundbiomes:igneous_cobble_button_north, undergroundbiomes:igneous_cobble_button_south, undergroundbiomes:igneous_cobble_button_west, undergroundbiomes:igneous_cobble_button_east, undergroundbiomes:metamorphic_stone_button_down, undergroundbiomes:metamorphic_stone_button_up, undergroundbiomes:metamorphic_stone_button_north, undergroundbiomes:metamorphic_stone_button_south, undergroundbiomes:metamorphic_stone_button_west, undergroundbiomes:metamorphic_stone_button_east, undergroundbiomes:metamorphic_cobble_button_down, undergroundbiomes:metamorphic_cobble_button_up, undergroundbiomes:metamorphic_cobble_button_north, undergroundbiomes:metamorphic_cobble_button_south, undergroundbiomes:metamorphic_cobble_button_west, undergroundbiomes:metamorphic_cobble_button_east, undergroundbiomes:sedimentary_stone_button_down, undergroundbiomes:sedimentary_stone_button_up, undergroundbiomes:sedimentary_stone_button_north, undergroundbiomes:sedimentary_stone_button_south, undergroundbiomes:sedimentary_stone_button_west, undergroundbiomes:sedimentary_stone_button_east } ]
    S:target_blocks <
        minecraft:tnt
        minecraft:wooden_door
        minecraft:lever
        minecraft:stone_button
        minecraft:cake
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:fence_gate
        minecraft:wooden_button
        minecraft:unpowered_comparator
        minecraft:powered_comparator
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=true

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.5

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=false

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:bed, minecraft:golden_rail, minecraft:crafting_table, minecraft:farmland, minecraft:furnace, minecraft:lit_furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, betternether:reeds_ladder, advancedrocketry:astrobed, enderio:block_dark_steel_ladder, enderio:block_painted_workbench } ]
    S:target_blocks <

     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:chest, minecraft:trapped_chest } ]
    S:target_lootable <

     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
        minecraft:spider
        minecraft:slime
        minecraft:pig
        minecraft:sheep
        minecraft:cow
        minecraft:polar_bear
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
        minecraft:chicken
        minecraft:rabbit
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
        minecraft:zombie 0.05
        minecraft:skeleton 0.1
        minecraft:creeper 0.05
        minecraft:witch 0.05
        minecraft:zombie_pigman 0.1
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.4

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.6
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.0

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:stone, minecraft:grass, minecraft:dirt, minecraft:sapling, minecraft:sand, minecraft:leaves, minecraft:golden_rail, minecraft:detector_rail, minecraft:web, minecraft:tallgrass, minecraft:deadbush, minecraft:yellow_flower, minecraft:red_flower, minecraft:brown_mushroom, minecraft:red_mushroom, minecraft:tnt, minecraft:redstone_wire, minecraft:wheat, minecraft:wooden_door, minecraft:rail, minecraft:iron_door, minecraft:unlit_redstone_torch, minecraft:snow_layer, minecraft:ice, minecraft:cactus, minecraft:reeds, minecraft:pumpkin, minecraft:lit_pumpkin, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:brown_mushroom_block, minecraft:red_mushroom_block, minecraft:melon_block, minecraft:pumpkin_stem, minecraft:melon_stem, minecraft:vine, minecraft:fence_gate, minecraft:mycelium, minecraft:waterlily, minecraft:nether_wart, minecraft:cocoa, minecraft:tripwire_hook, minecraft:tripwire, minecraft:flower_pot, minecraft:carrots, minecraft:potatoes, minecraft:unpowered_comparator, minecraft:activator_rail, minecraft:leaves2, minecraft:slime, minecraft:packed_ice, minecraft:double_plant, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, minecraft:beetroots, minecraft:frosted_ice, minecraft:structure_void, minecraft:white_shulker_box, minecraft:orange_shulker_box, minecraft:magenta_shulker_box, minecraft:light_blue_shulker_box, minecraft:yellow_shulker_box, minecraft:lime_shulker_box, minecraft:pink_shulker_box, minecraft:gray_shulker_box, minecraft:silver_shulker_box, minecraft:cyan_shulker_box, minecraft:purple_shulker_box, minecraft:blue_shulker_box, minecraft:brown_shulker_box, minecraft:green_shulker_box, minecraft:red_shulker_box, minecraft:black_shulker_box, ic2:te, ic2:leaves, ic2:sapling, ic2:reinforced_door, ic2:dynamite, ic2:uu_matter, ic2:construction_foam, ic2:coolant, ic2:creosote, ic2:hot_coolant, ic2:pahoehoe_lava, ic2:biomass, ic2:biogas, ic2:distilled_water, ic2:superheated_steam, ic2:steam, ic2:hot_water, ic2:weed_ex, ic2:air, ic2:hydrogen, ic2:oxygen, ic2:heavy_water, ic2:milk, betternether:eye_vine, betternether:eye_seed, betternether:nether_grass, betternether:nether_reed, betternether:stalagnate_stem, betternether:stalagnate_seed, betternether:stalagnate_seed_bottom, betternether:stalagnate_planks_gate, betternether:reeds_gate, betternether:lucis_spore, betternether:nether_cactus, betternether:wart_seed, betternether:barrel_cactus, betternether:agave, betternether:ink_bush_seed, betternether:black_apple_seed, betternether:orange_mushroom, betternether:red_mold, betternether:gray_mold, betternether:bone_mushroom, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:grass, biomesoplenty:leaves_0, biomesoplenty:leaves_1, biomesoplenty:leaves_2, biomesoplenty:leaves_3, biomesoplenty:leaves_4, biomesoplenty:leaves_5, biomesoplenty:leaves_6, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, biomesoplenty:seaweed, biomesoplenty:waterlily, biomesoplenty:sapling_0, biomesoplenty:sapling_1, biomesoplenty:sapling_2, biomesoplenty:plant_0, biomesoplenty:plant_1, biomesoplenty:double_plant, biomesoplenty:mushroom, biomesoplenty:flower_0, biomesoplenty:flower_1, biomesoplenty:ivy, biomesoplenty:willow_vine, forgemultipartcbe:multipart_block, reccomplex:generic_space, reccomplex:generic_solid, reccomplex:structure_generator, reccomplex:maze_generator, reccomplex:weighted_command_block, reccomplex:spawn_script, libvulpes:blockphantom, advancedrocketry:quartzcrucible, advancedrocketry:alienleaves, advancedrocketry:aliensapling, advancedrocketry:airlock_door, advancedrocketry:unlittorch, advancedrocketry:oxygenfluid, advancedrocketry:hydrogenfluid, advancedrocketry:rocketfuel, advancedrocketry:nitrogenfluid, advancedrocketry:electricmushroom, botania:flower, botania:specialflower, botania:shinyflower, botania:solidvine, botania:buriedpetals, botania:redstringfertilizer, botania:mushroom, botania:doubleflower1, botania:doubleflower2, botania:fakeair, botania:ghostrail, botania:lightrelay, botania:cellblock, botania:teruterubozu, coroutil:blank, enderio:block_machine_io, enderio:block_machine_base, enderio:block_dark_steel_door, enderio:block_confusion_charge, enderio:block_concussion_charge, enderio:block_ender_charge, enderio:block_painted_fence_gate, enderio:block_painted_sand, enderio:block_painted_wooden_door, enderio:block_painted_iron_door, enderio:block_painted_dark_steel_door, enderio:block_painted_packed_ice, enderio:block_painted_packed_ice_solid, enderio:block_exit_rail, enderio:block_fluid_nutrient_distillation, enderio:block_fluid_ender_distillation, enderio:block_fluid_vapor_of_levity, enderio:block_fluid_hootch, enderio:block_fluid_rocket_fuel, enderio:block_fluid_fire_water, enderio:block_fluid_cloud_seed, enderio:block_fluid_cloud_seed_concentrated, darkutils:fake_tnt, darkutils:ender_tether, darkutils:slime_dyed, mcmultipart:multipart, mekanism:obsidiantnt, gregtech:leaves, gregtech:sapling, gregtech:fluid.steam, gregtech:fluid.palladium, gregtech:fluid.fish_oil, gregtech:fluid.oil_light, gregtech:fluid.platinum, gregtech:fluid.raw_growth_medium, gregtech:fluid.sterilized_growth_medium, gregtech:fluid.oil_medium, gregtech:fluid.oil_heavy, gregtech:fluid.natural_gas, gregtech:fluid.sodium_hydroxide_solution, powersuits:liquid_nitrogen, nt:conifer_leaves_yellow, nt:conifer_leaves_orange, nt:cherry_leaves_purple, nt:cherry_leaves_white, nt:cherry_leaves_pink, nt:maple_leaves, nt:jacaranda_leaves, nt:spruce_leaves_red, nt:spruce_leaves_blue, nt:oak_leaves_red, nt:brownautumn_leaves, nt:orangeautumn_leaves, nt:redautumn_leaves, nt:yellowautumn_leaves, nt:paulownia_leaves, nt:orchard_leaves, nt:whitemyrtle_leaves, nt:conifer_sapling_yellow, nt:conifer_sapling_orange, nt:cherry_sapling_purple, nt:cherry_sapling_white, nt:cherry_sapling_pink, nt:maple_sapling, nt:jacaranda_sapling, nt:spruce_sapling_red, nt:spruce_sapling_blue, nt:oak_sapling_red, nt:brownautumn_sapling, nt:orangeautumn_sapling, nt:redautumn_sapling, nt:yellowautumn_sapling, nt:paulownia_sapling, nt:orchard_sapling, nt:whitemyrtle_sapling, nt:shrub_sapling_acacia, nt:shrub_sapling_birch, nt:shrub_sapling_bluespruce, nt:shrub_sapling_cherrypink, nt:shrub_sapling_cherrypurple, nt:shrub_sapling_cherrywhite, nt:shrub_sapling_coniferorange, nt:shrub_sapling_coniferyellow, nt:shrub_sapling_darkoak, nt:shrub_sapling_jacaranda, nt:shrub_sapling_jungle, nt:shrub_sapling_maple, nt:shrub_sapling_oak, nt:shrub_sapling_redoak, nt:shrub_sapling_redspruce, nt:shrub_sapling_spruce, nt:sapling_poplar, nt:sapling_tallspruce, traverse:red_autumnal_leaves, traverse:red_autumnal_sapling, traverse:brown_autumnal_leaves, traverse:brown_autumnal_sapling, traverse:orange_autumnal_leaves, traverse:orange_autumnal_sapling, traverse:yellow_autumnal_leaves, traverse:yellow_autumnal_sapling, traverse:fir_leaves, traverse:fir_sapling, traverse:fir_fence_gate, traverse:fir_door, traverse:dead_grass, traverse:cold_grass, rftools:machine_frame, rftools:machine_base, rftools:support_block, rftools:shield_template_block, servertickmonitor:monitor, tektopia:chair, vampirism:block_blood_fluid, vampirism:block_impure_blood_fluid, vampirism:vampirism_flower, vampirism:cursed_earth, vampirism:garlic, xlfoodmod:grass, xlfoodmod:vanilla_flower, xlfoodmod:rice_plant, xlfoodmod:pepper_plant, xlfoodmod:corn_plant, xlfoodmod:cucumber_plant, xlfoodmod:lettuce_plant, xlfoodmod:onion_plant, xlfoodmod:tomato_plant, xlfoodmod:strawberry_plant, structurize:blockcactusplank, structurize:blockcactusdoor, structurize:blockcactustrapdoor, structurize:blockcactusslab_half, structurize:blockcactusslab_double, structurize:blockcactusstair, structurize:blockcactusfence, structurize:blockcactusfencegate, structurize:blocksolidsubstitution, structurize:blocksubstitution, structurize:multiblock, minecolonies:blockinfoposter, minecolonies:blockconstructiontape, minecolonies:blockbarrackstowersubstitution, minecolonies:blockwaypoint, actuallyadditions:block_canola_oil, actuallyadditions:block_refined_canola_oil, actuallyadditions:block_crystal_oil, actuallyadditions:block_empowered_oil, actuallyadditions:block_black_lotus, actuallyadditions:block_rice, actuallyadditions:block_canola, actuallyadditions:block_flax, actuallyadditions:block_coffee, actuallyadditions:block_wild, byg:pinkallium, byg:redcornflower, byg:sacreddatura, byg:firecracker, byg:kovan, byg:orangedaisy, byg:pinkorchid, byg:californiapoppy, byg:purpleorchid, byg:redorchid, byg:cyanrose, byg:rose, byg:cyantulip, byg:greentuilp, byg:magentatulip, byg:purpletulip, byg:yellowtulip, byg:deadgrass, byg:glowcaneblue, byg:glowcanered, byg:blueberrybush, byg:strawberrybush, byg:rudostalk, byg:poisionivy, byg:minicactus, byg:whitecherrysapling, byg:pinkcherrysapling, byg:cikasapling, byg:greatoaksapling, byg:jacarandasapling, byg:mangrovesapling, byg:redmaplesapling, byg:silvermaplesapling, byg:orangeoaksapling, byg:redoaksapling, byg:orchardsapling, byg:paloverdesapling, byg:pinesapling, byg:skyrissapling, byg:bluesprucesapling, byg:redsprucesapling, byg:orangesprucesapling, byg:yellowsprucesapling, byg:pinkstellatasapling, byg:whitestellatasapling, byg:redwoodsapling, byg:zelkovasapling, byg:baobabsapling, byg:willowsapling, byg:amaranth, byg:foxglove, byg:incanlily, byg:crocus, byg:rainboweucalyptussapling, byg:hollysapling, byg:witchhazelsapling, byg:snowdrops, byg:wintercyclamen, byg:rudostage0, byg:rudostage1, byg:rudostage2, byg:rudostage3, byg:blueberrybushstage0, byg:blueberrybushstage1, byg:strawberrybushstage0, byg:strawberrybushstage1, byg:wildstrawberry, byg:wildrudo, byg:glowcanepink, byg:glowcanepurple, byg:ebonysapling, byg:rowansapling, byg:hawthornsapling, byg:ironwoodsapling, byg:yellowdaffodil, byg:pinkdaffodil, byg:peachleatherflower, byg:violetleatherflower, byg:whiteanemone, byg:pinkanemone, byg:bluesage, byg:purplesage, byg:whitesage, byg:winterscilla, byg:redcelosia, byg:whitecelosia, byg:magentacelosia, byg:yellowcelosia, byg:orangecelosia, byg:purplecelosia, byg:firsapling, byg:cyan_amaranth, byg:purple_amaranth, byg:short_dead_grass, byg:prairie_grass, byg:cypresssapling, byg:orange_amaranth, byg:magenta_amaranth, byg:allium_bush, byg:allium_bush2, byg:allium_bush3, byg:allium_bush4, byg:allium_bush5, byg:allium_bush6, byg:allium_bush7, byg:allium_bush8, byg:prairie_grass2, byg:prairie_grass3, byg:prairie_grass4, byg:prairie_grass5, byg:prairie_grass6, byg:prairie_grass7, byg:prairie_grass8, byg:mahogany_sapling, byg:palm_sapling, byg:aspen_sapling, byg:yellow_birch_sapling, byg:pink_allium_bush, byg:daffodil, byg:reed, byg:cattails, byg:osiriarose, byg:japanese_orchid, byg:springwater, byg:alpine_bellflower, byg:angelica, byg:azalea, byg:begonia, byg:bistort, byg:black_rose, byg:fairy_slipper, byg:delphinium, byg:golden_spined_cactus, byg:guzmania, byg:iris, byg:lazarus_bell_flower, byg:lollipop_flower, byg:prickly_pear, byg:protea_flower, byg:richea, byg:salal_bush, byg:salal_bush_ripe, byg:silver_vase_flower, byg:torch_ginger, byg:winter_rose, byg:winter_succulent, byg:black_puff, byg:weeping_milk_cap, byg:wood_blewit, byg:horseweed, byg:frozen_oak_sapling, byg:red_birch_sapling, byg:orange_birch_sapling, byg:brown_birch_sapling, byg:dry_brown_oak_sapling, byg:dry_green_oak_sapling, byg:blue_enchanted_sapling, byg:pink_enchanted_sapling, byg:purple_enchanted_sapling, dimdoors:gold_door, dimdoors:quartz_door, dimdoors:iron_dimensional_door, dimdoors:gold_dimensional_door, dimdoors:quartz_dimensional_door, dimdoors:dimensional_portal, dimdoors:oak_dimensional_door, op_pickaxes_mod:pickaxeplant, pvj:short_grass, pvj:frost_lotus, pvj:silverleaf, pvj:chickweed, pvj:clovers, pvj:crabgrass, pvj:bracket_fungus, pvj:frogbit, pvj:duckweed, pvj:waxcap, pvj:orange_mushroom, pvj:deathcap, pvj:cattail, pvj:beach_grass, pvj:sea_oats, pvj:sundew, pvj:small_cactus, pvj:void_grass, pvj:wild_wheat, pvj:wild_potato, pvj:wild_carrot, pvj:wild_beetroot, pvj:bloodnettle, pvj:glowcap, pvj:witherweed, pvj:leaves_willow, pvj:leaves_mangrove, pvj:leaves_palm, pvj:leaves_redwood, pvj:leaves_fir, pvj:leaves_pine, pvj:leaves_aspen, pvj:leaves_red_maple, pvj:leaves_orange_maple, pvj:leaves_baobab, pvj:leaves_cottonwood, pvj:leaves_juniper, pvj:leaves_juniper_berried, pvj:leaves_white_cherry_blossom, pvj:leaves_pink_cherry_blossom, pvj:leaves_jacaranda, pvj:sapling_willow, pvj:sapling_mangrove, pvj:sapling_palm, pvj:sapling_redwood, pvj:sapling_fir, pvj:sapling_pine, pvj:sapling_aspen, pvj:sapling_red_maple, pvj:sapling_orange_maple, pvj:sapling_baobab, pvj:sapling_cottonwood, pvj:sapling_juniper, pvj:sapling_juniper_berried, pvj:sapling_white_cherry_blossom, pvj:sapling_pink_cherry_blossom, pvj:sapling_jacaranda, pvj:willow_fence_gate, pvj:mangrove_fence_gate, pvj:palm_fence_gate, pvj:redwood_fence_gate, pvj:fir_fence_gate, pvj:pine_fence_gate, pvj:aspen_fence_gate, pvj:maple_fence_gate, pvj:baobab_fence_gate, pvj:cottonwood_fence_gate, pvj:juniper_fence_gate, pvj:cherry_blossom_fence_gate, pvj:jacaranda_fence_gate, pvj:willow_door, pvj:mangrove_door, pvj:palm_door, pvj:redwood_door, pvj:fir_door, pvj:pine_door, pvj:aspen_door, pvj:maple_door, pvj:baobab_door, pvj:cottonwood_door, pvj:juniper_door, pvj:cherry_blossom_door, pvj:jacaranda_door, pvj:fallenleaves_oak, pvj:fallenleaves_birch, pvj:fallenleaves_spruce, pvj:fallenleaves_jungle, pvj:fallenleaves_darkoak, pvj:fallenleaves_acacia, pvj:fallenleaves_dead, pvj:fallenleaves_willow, pvj:fallenleaves_mangrove, pvj:fallenleaves_palm, pvj:fallenleaves_redwood, pvj:fallenleaves_fir, pvj:fallenleaves_pine, pvj:fallenleaves_aspen, pvj:fallenleaves_red_maple, pvj:fallenleaves_orange_maple, pvj:fallenleaves_baobab, pvj:fallenleaves_cottonwood, pvj:fallenleaves_juniper, pvj:fallenleaves_juniper_berried, pvj:fallenleaves_white_cherry_blossom, pvj:fallenleaves_pink_cherry_blossom, pvj:fallenleaves_jacaranda, pvj:pvj_cobweb, pvj:fallenleaves_bop_yellow_autumn, pvj:fallenleaves_bop_orange_autumn, pvj:fallenleaves_bop_bamboo, pvj:fallenleaves_bop_magic, pvj:fallenleaves_bop_umbran, pvj:fallenleaves_bop_dead, pvj:fallenleaves_bop_fir, pvj:fallenleaves_bop_ethereal, pvj:fallenleaves_bop_origin, pvj:fallenleaves_bop_pink_cherry, pvj:fallenleaves_bop_white_cherry, pvj:fallenleaves_bop_maple, pvj:fallenleaves_bop_hellbark, pvj:fallenleaves_bop_flowering, pvj:fallenleaves_bop_jacaranda, pvj:fallenleaves_bop_sacred_oak, pvj:fallenleaves_bop_mangrove, pvj:fallenleaves_bop_palm, pvj:fallenleaves_bop_redwood, pvj:fallenleaves_bop_willow, pvj:fallenleaves_bop_pine, pvj:fallenleaves_bop_mahogany, pvj:fallenleaves_bop_ebony, pvj:fallenleaves_bop_eucalyptus, pvj:fallenleaves_bop_red_big_flower, pvj:fallenleaves_bop_yellow_big_flower, pvj:fallenleaves_traverse_red_autumn, pvj:fallenleaves_traverse_brown_autumn, pvj:fallenleaves_traverse_orange_autumn, pvj:fallenleaves_traverse_yellow_autumn, pvj:fallenleaves_traverse_fir, undergroundbiomes:igneous_stone_button_down, undergroundbiomes:igneous_stone_button_up, undergroundbiomes:igneous_stone_button_north, undergroundbiomes:igneous_stone_button_south, undergroundbiomes:igneous_stone_button_west, undergroundbiomes:igneous_stone_button_east, undergroundbiomes:igneous_cobble_button_down, undergroundbiomes:igneous_cobble_button_up, undergroundbiomes:igneous_cobble_button_north, undergroundbiomes:igneous_cobble_button_south, undergroundbiomes:igneous_cobble_button_west, undergroundbiomes:igneous_cobble_button_east, undergroundbiomes:metamorphic_stone_button_down, undergroundbiomes:metamorphic_stone_button_up, undergroundbiomes:metamorphic_stone_button_north, undergroundbiomes:metamorphic_stone_button_south, undergroundbiomes:metamorphic_stone_button_west, undergroundbiomes:metamorphic_stone_button_east, undergroundbiomes:metamorphic_cobble_button_down, undergroundbiomes:metamorphic_cobble_button_up, undergroundbiomes:metamorphic_cobble_button_north, undergroundbiomes:metamorphic_cobble_button_south, undergroundbiomes:metamorphic_cobble_button_west, undergroundbiomes:metamorphic_cobble_button_east, undergroundbiomes:sedimentary_stone_button_down, undergroundbiomes:sedimentary_stone_button_up, undergroundbiomes:sedimentary_stone_button_north, undergroundbiomes:sedimentary_stone_button_south, undergroundbiomes:sedimentary_stone_button_west, undergroundbiomes:sedimentary_stone_button_east } ]
    S:block_blacklist <
        minecraft:stone
        minecraft:grass
        minecraft:dirt
        minecraft:sapling
        minecraft:sand
        minecraft:leaves
        minecraft:golden_rail
        minecraft:detector_rail
        minecraft:web
        minecraft:tallgrass
        minecraft:deadbush
        minecraft:yellow_flower
        minecraft:red_flower
        minecraft:brown_mushroom
        minecraft:red_mushroom
        minecraft:tnt
        minecraft:redstone_wire
        minecraft:wheat
        minecraft:wooden_door
        minecraft:rail
        minecraft:iron_door
        minecraft:unlit_redstone_torch
        minecraft:snow_layer
        minecraft:ice
        minecraft:cactus
        minecraft:reeds
        minecraft:pumpkin
        minecraft:lit_pumpkin
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:brown_mushroom_block
        minecraft:red_mushroom_block
        minecraft:melon_block
        minecraft:pumpkin_stem
        minecraft:melon_stem
        minecraft:vine
        minecraft:fence_gate
        minecraft:mycelium
        minecraft:waterlily
        minecraft:nether_wart
        minecraft:cocoa
        minecraft:tripwire_hook
        minecraft:tripwire
        minecraft:flower_pot
        minecraft:carrots
        minecraft:potatoes
        minecraft:unpowered_comparator
        minecraft:activator_rail
        minecraft:leaves2
        minecraft:slime
        minecraft:packed_ice
        minecraft:double_plant
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        minecraft:beetroots
        minecraft:frosted_ice
        minecraft:structure_void
        minecraft:white_shulker_box
        minecraft:orange_shulker_box
        minecraft:magenta_shulker_box
        minecraft:light_blue_shulker_box
        minecraft:yellow_shulker_box
        minecraft:lime_shulker_box
        minecraft:pink_shulker_box
        minecraft:gray_shulker_box
        minecraft:silver_shulker_box
        minecraft:cyan_shulker_box
        minecraft:purple_shulker_box
        minecraft:blue_shulker_box
        minecraft:brown_shulker_box
        minecraft:green_shulker_box
        minecraft:red_shulker_box
        minecraft:black_shulker_box
        forgemultipartcbe:multipart_block
        darkutils:fake_tnt
        darkutils:ender_tether
        darkutils:slime_dyed
        gregtech:leaves
        gregtech:sapling
        gregtech:fluid.palladium
        gregtech:fluid.steam
        gregtech:fluid.oil_light
        gregtech:fluid.natural_gas
        gregtech:fluid.platinum
        gregtech:fluid.oil_medium
        gregtech:fluid.oil_heavy
        mekanism:obsidiantnt
        rftools:machine_frame
        rftools:machine_base
        rftools:support_block
        rftools:shield_template_block
        wildnature:beech_leaves
        wildnature:beech_sapling
        wildnature:beech_slab_double
        wildnature:beech_slab_half
        wildnature:redwood_leaves
        wildnature:redwood_sapling
        wildnature:redwood_slab_double
        wildnature:redwood_slab_half
        wildnature:eucalyptus_leaves
        wildnature:eucalyptus_sapling
        wildnature:eucalyptus_slab_double
        wildnature:eucalyptus_slab_half
        wildnature:hornbeam_leaves
        wildnature:hornbeam_sapling
        wildnature:hornbeam_slab_double
        wildnature:hornbeam_slab_half
        wildnature:pear_leaves
        wildnature:pear_sapling
        wildnature:pear_slab_double
        wildnature:pear_slab_half
        wildnature:apple_leaves
        wildnature:apple_sapling
        wildnature:apple_slab_double
        wildnature:apple_slab_half
        wildnature:jacaranda_leaves
        wildnature:jacaranda_sapling
        wildnature:jacaranda_slab_double
        wildnature:jacaranda_slab_half
        wildnature:rowan_leaves
        wildnature:rowan_sapling
        wildnature:rowan_slab_double
        wildnature:rowan_slab_half
        wildnature:fir_leaves
        wildnature:fir_sapling
        wildnature:fir_slab_double
        wildnature:fir_slab_half
        wildnature:hazel_leaves
        wildnature:hazel_sapling
        wildnature:hazel_slab_double
        wildnature:hazel_slab_half
        wildnature:cherry_pink_leaves
        wildnature:cherry_white_leaves
        wildnature:cherry_pink_sapling
        wildnature:cherry_white_sapling
        wildnature:cherry_slab_double
        wildnature:cherry_slab_half
        wildnature:baobab_leaves
        wildnature:baobab_sapling
        wildnature:baobab_slab_double
        wildnature:baobab_slab_half
        wildnature:ebony_leaves
        wildnature:ebony_sapling
        wildnature:ebony_slab_double
        wildnature:ebony_slab_half
        wildnature:pine_leaves
        wildnature:pine_sapling
        wildnature:pine_slab_double
        wildnature:pine_slab_half
        wildnature:palm_leaves
        wildnature:palm_sapling
        wildnature:palm_slab_double
        wildnature:palm_slab_half
        wildnature:mahogany_leaves
        wildnature:mahogany_sapling
        wildnature:mahogany_slab_double
        wildnature:mahogany_slab_half
        wildnature:cedar_leaves
        wildnature:cedar_sapling
        wildnature:cedar_slab_double
        wildnature:cedar_slab_half
        wildnature:willow_leaves
        wildnature:willow_sapling
        wildnature:willow_slab_double
        wildnature:willow_slab_half
        wildnature:red_autumn_leaves
        wildnature:orange_autumn_leaves
        wildnature:yellow_autumn_leaves
        wildnature:rotten_leaves
        wildnature:small_grass
        wildnature:dead_short_grass
        wildnature:desert_grass
        wildnature:tallgrass_wheat
        wildnature:tallgrass_thistle
        wildnature:tallgrass_flower
        wildnature:tallgrass_fernsprout
        wildnature:wild_wheat
        wildnature:leaf_pile
        wildnature:dead_leaf_pile
        wildnature:corn_bush
        wildnature:jacaranda_flower
        wildnature:cherry_flower
        wildnature:daisy
        wildnature:clover
        wildnature:medium_grass
        wildnature:bluebell
        wildnature:pulsatilla
        wildnature:heather_purple
        wildnature:heather_pink
        wildnature:heather_white
        wildnature:lupine_violet
        wildnature:lupine_blue
        wildnature:lupine_red
        wildnature:lupine_pink
        wildnature:lupine_yellow
        wildnature:iris_violet
        wildnature:iris_purple
        wildnature:forget_me_not_blue
        wildnature:forget_me_not_pink
        wildnature:brown_grass_block
        wildnature:mold_grass_block
        wildnature:desert_grass_block
        wildnature:dried_grass_block
        wildnature:overgrown_stone
        wildnature:brown_mycelium
        wildnature:mold_mycelium
        wildnature:white_sand
        wildnature:ash
        wildnature:mushroom_1
        wildnature:mushroom_8
        wildnature:mushroom_7
        wildnature:mushroom_2
        wildnature:mushroom_6
        wildnature:mushroom_5
        wildnature:mushroom_4
        wildnature:mushroom_3
        wildnature:mushroom_9
        wildnature:mb_water
        xlfoodmod:grass
        xlfoodmod:vanilla_flower
        xlfoodmod:rice_plant
        xlfoodmod:pepper_plant
        xlfoodmod:corn_plant
        xlfoodmod:cucumber_plant
        xlfoodmod:lettuce_plant
        xlfoodmod:onion_plant
        xlfoodmod:tomato_plant
        xlfoodmod:strawberry_plant
        actuallyadditions:block_canola_oil
        actuallyadditions:block_refined_canola_oil
        actuallyadditions:block_crystal_oil
        actuallyadditions:block_empowered_oil
        actuallyadditions:block_black_lotus
        actuallyadditions:block_rice
        actuallyadditions:block_canola
        actuallyadditions:block_flax
        actuallyadditions:block_coffee
        actuallyadditions:block_wild
        mystcraft:fluidblockblackink
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.15

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=1.0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:emerald_block, minecraft:bookshelf, minecraft:farmland, minecraft:cake } ]
    S:block_treasured_list <
        minecraft:emerald_block
        minecraft:bookshelf
        minecraft:farmland
        minecraft:cake
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=1.0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=true

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0.2

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=true

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=true

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=true

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=true

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=true

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=true

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=true
}


